{"version":3,"sources":["utils/Api.js","components/Search.js","components/EmployeeTable.js","App.js","reportWebVitals.js","index.js"],"names":["axios","get","SearchForm","props","className","htmlFor","onChange","handleInputChange","value","name","type","placeholder","id","EmployeeTable","state","employees","filteredEmployees","isSorted","search","componentDidMount","API","then","res","console","log","data","results","setState","sortEmployees","sortedEmployees","reverse","sort","a","b","email","event","target","Search","this","handleFormSubmit","scope","onClick","filter","employee","first","includes","map","src","picture","medium","alt","last","phone","cell","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAIe,EACH,WACR,OAAOA,IAAMC,IALD,kDCwBDC,MAvBf,SAAoBC,GAChB,OACI,+BACI,sBAAKC,UAAU,aAAf,UAEQ,uBAAOC,QAAQ,SAAf,qBAEA,uBACIC,SAAUH,EAAMI,kBAChBC,MAAOL,EAAMK,MACbC,KAAK,SACLC,KAAK,OACLN,UAAU,eACVO,YAAY,uCACZC,GAAG,WAGX,6BC4DDC,E,4MA1EXC,MAAQ,CACJC,UAAW,GACXC,kBAAmB,GACnBC,UAAU,EACVC,OAAQ,I,EAGZC,kBAAoB,WAChBC,IACKC,MAAK,SAAAC,GACFC,QAAQC,IAAIF,EAAIG,KAAKC,SACrB,EAAKC,SAAS,CAAEZ,UAAWO,EAAIG,KAAKC,c,EAIhDE,cAAgB,WACZ,IAAIC,EAAe,YAAO,EAAKf,MAAMC,WAEjC,EAAKD,MAAMG,SACXY,EAAgBC,UAEhBD,EAAgBE,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,MAAQD,EAAEC,MAAS,EAAMD,EAAEC,MAAQF,EAAEE,OAAU,EAAI,KAEzF,EAAKP,SAAS,CAAEZ,UAAWc,EAAiBZ,UAAU,K,EAG1DV,kBAAoB,SAAA4B,GAChB,IAAM1B,EAAO0B,EAAMC,OAAO3B,KACpBD,EAAQ2B,EAAMC,OAAO5B,MAC3B,EAAKmB,SAAL,eACKlB,EAAOD,K,uDAIN,IAAD,OACL,OACI,gCACI,qBAAKJ,UAAU,qBAAf,SACI,qBAAKA,UAAU,YAAf,SACI,cAACiC,EAAD,CACI7B,MAAO8B,KAAKxB,MAAMI,OAClBX,kBAAmB+B,KAAK/B,kBACxBgC,iBAAkBD,KAAKC,uBAInC,wBAAOnC,UAAU,sBAAjB,UACI,gCACI,+BACI,oBAAIoC,MAAM,MAAV,sBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,SAAgB,wBAAQpC,UAAU,0BAA0BqC,QAAS,kBAAM,EAAKb,iBAAhE,qBAChB,oBAAIY,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,uBAGR,gCACKF,KAAKxB,MAAMC,UAAU2B,QAAO,SAAAC,GAAQ,OAAIA,EAASlC,KAAKmC,MAAMC,SAAS,EAAK/B,MAAMI,WAAS4B,KAAI,SAAAH,GAAQ,OAClG,+BACI,6BAAI,qBAAKI,IAAKJ,EAASK,QAAQC,OAAQC,IAAI,yBAC3C,6BAAKP,EAASlC,KAAKmC,QACnB,6BAAKD,EAASlC,KAAK0C,OACnB,6BAAKR,EAAST,QACd,6BAAKS,EAASS,QACd,6BAAKT,EAASU,SANTV,EAAS/B,GAAGJ,sB,GA5DrB8C,aCcbC,MAdf,WACE,OACE,sBAAKnD,UAAU,GAAf,UACE,qBAAKA,UAAU,iCAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,YAAd,gCACA,mBAAGA,UAAU,OAAb,2DAGJ,cAAC,EAAD,QCDSoD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrC,MAAK,YAAkD,IAA/CsC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a93b568b.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst BASEURL = \"https://randomuser.me/api/?results=200&nat=us\";\r\nconst APIKEY = \"\";\r\n\r\nexport default {\r\n  getUsers: function() {\r\n    return axios.get(BASEURL);\r\n  }\r\n};","import React from \"react\";\r\n\r\nfunction SearchForm(props) {\r\n    return (\r\n        <form>\r\n            <div className=\"form-group\">\r\n\r\n                    <label htmlFor=\"search\">Search:</label>\r\n\r\n                    <input\r\n                        onChange={props.handleInputChange}\r\n                        value={props.value}\r\n                        name=\"search\"\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Search For an Employee by First Name\"\r\n                        id=\"search\"\r\n                    />\r\n\r\n                <br />\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default SearchForm;\r\n","import React, { Component } from \"react\";\r\nimport API from \"../utils/Api.js\";\r\nimport SearchForm from \"./Search.js\";\r\n\r\nclass EmployeeTable extends Component {\r\n    state = {\r\n        employees: [],\r\n        filteredEmployees: [],\r\n        isSorted: false,\r\n        search: \"\"\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        API.getUsers()\r\n            .then(res => {\r\n                console.log(res.data.results)\r\n                this.setState({ employees: res.data.results })\r\n            })\r\n    }\r\n\r\n    sortEmployees = () => {\r\n        let sortedEmployees = [...this.state.employees]\r\n\r\n        if (this.state.isSorted) {\r\n            sortedEmployees.reverse();\r\n        } else {\r\n            sortedEmployees.sort((a, b) => (a.email > b.email) ? 1 : ((b.email > a.email) ? -1 : 0));\r\n        }\r\n        this.setState({ employees: sortedEmployees, isSorted: true })\r\n    }\r\n\r\n    handleInputChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"bg-dark text-white\">\r\n                    <div className=\"container\">\r\n                        <SearchForm\r\n                            value={this.state.search}\r\n                            handleInputChange={this.handleInputChange}\r\n                            handleFormSubmit={this.handleFormSubmit}>\r\n                        </SearchForm>\r\n                    </div>\r\n                </div>\r\n                <table className=\"table table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">ID Photo</th>\r\n                            <th scope=\"col\">First</th>\r\n                            <th scope=\"col\">Last</th>\r\n                            <th scope=\"col\"><button className=\"btn btn-link text-black\" onClick={() => this.sortEmployees()}>Email</button></th>\r\n                            <th scope=\"col\">Phone</th>\r\n                            <th scope=\"col\">Cell</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.employees.filter(employee => employee.name.first.includes(this.state.search)).map(employee => (\r\n                            <tr key={employee.id.value}>\r\n                                <td><img src={employee.picture.medium} alt=\"sample employee ID\" /></td>\r\n                                <td>{employee.name.first}</td>\r\n                                <td>{employee.name.last}</td>\r\n                                <td>{employee.email}</td>\r\n                                <td>{employee.phone}</td>\r\n                                <td>{employee.cell}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default EmployeeTable;\r\n","import './App.css';\nimport EmployeeTable from './components/EmployeeTable';\nimport SearchForm from './components/Search';\n\nfunction App() {\n  return (\n    <div className=\"\">\n      <div className=\"jumbotron jumbotron-fluid mb-0\">\n        <div className=\"container\">\n          <h1 className=\"display-4\">EMPLOYEE DIRECTORY</h1>\n          <p className=\"lead\">Looking for an employee? We've got some.</p>\n        </div>\n      </div>\n      <EmployeeTable></EmployeeTable>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}